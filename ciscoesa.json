{
    "appid": "7bf76da9-f31c-448b-906b-7c6de9d3cc70",
    "name": "Cisco ESA",
    "description": "This app supports investigation on the Cisco Email Security Appliance (ESA) device",
    "publisher": "Splunk",
    "package_name": "phantom_ciscoesa",
    "license": "Copyright (c) 2017-2024 Splunk Inc.",
    "main_module": "ciscoesa_connector.py",
    "type": "investigative",
    "app_version": "4.0.1",
    "utctime_updated": "2024-10-15T12:40:27.594330Z",
    "product_vendor": "Cisco",
    "product_name": "Cisco ESA",
    "product_version_regex": ".*",
    "min_phantom_version": "6.3.0",
    "logo": "logo_cisco.svg",
    "logo_dark": "logo_cisco_dark.svg",
    "latest_tested_versions": [
        "Cisco Secure Email Gateway C100V Version: 16.0.0-050"
    ],
    "python_version": "3",
    "fips_compliant": true,
    "configuration": {
        "url": {
            "description": "URL (e.g. https://10.10.10.10:6443)",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 0,
            "name": "url",
            "id": 0
        },
        "sma_url": {
            "description": "SMA URL  (e.g. https://10.20.20.20:6443)",
            "data_type": "string",
            "required": false,
            "value_list": [],
            "default": "",
            "order": 1,
            "name": "sma_url",
            "id": 1
        },
        "username": {
            "description": "Username (for both ESA and SMA)",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 2,
            "name": "username",
            "id": 2
        },
        "password": {
            "description": "Password (for both ESA and SMA)",
            "data_type": "password",
            "required": true,
            "order": 3,
            "name": "password",
            "id": 3
        },
        "verify_server_cert": {
            "description": "Verify server certificate",
            "data_type": "boolean",
            "required": false,
            "default": "False",
            "order": 4,
            "name": "verify_server_cert",
            "id": 4
        },
        "cluster_mode": {
            "description": "Check if ESA is deployed in cluster mode",
            "data_type": "boolean",
            "required": false,
            "default": "False",
            "order": 5,
            "name": "cluster_mode",
            "id": 5
        },
        "timeout": {
            "description": "REST API timeout",
            "data_type": "numeric",
            "required": false,
            "value_list": [],
            "default": "",
            "order": 6,
            "name": "timeout",
            "id": 6
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate credentials provided for connectivity",
            "type": "test",
            "identifier": "test_asset_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "decode url",
            "description": "Process Cisco encoded URL",
            "verbose": "Parse and decode URL from \"secure-web.cisco.com\" to get the redirected URL.<ul><li>It will accept the entire URL:<p><code>http://secure-web.cisco.com/{random_chars}/https%3A%2F%2Fmy.phantom.us%2F4.1%2Fdocs%2Fapp_reference%2Fphantom_ciscoesa</code></li><li>Everything except the protocol:<p><code>secure-web.cisco.com/{random_chars}/https%3A%2F%2Fmy.phantom.us%2F4.1%2Fdocs%2Fapp_reference%2Fphantom_ciscoesa</code></li><li>Or just the quoted section:<p><code>https%3A%2F%2Fmy.phantom.us%2F4.1%2Fdocs%2Fapp_reference%2Fphantom_ciscoesa</code></li></ul>",
            "type": "investigate",
            "identifier": "decode_url",
            "read_only": true,
            "parameters": {
                "encoded_url": {
                    "description": "Encoded URL to process",
                    "data_type": "string",
                    "required": true,
                    "contains": [
                        "url",
                        "encoded url"
                    ],
                    "order": 0,
                    "primary": true,
                    "name": "encoded_url",
                    "id": 1,
                    "param_name": "encoded_url"
                }
            },
            "render": {
                "width": 12,
                "height": 5,
                "type": "table",
                "title": "Decode URL"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.encoded_url",
                    "data_type": "string",
                    "example_values": [
                        "https://www.w3schools.com/tags/ref_urlencode.ASP#:~:text=URL%20Encoding%20(Percent%20Encoding)&text=URLs%20can%20only%20be%20sent,followed%20by%20two%20hexadecimal%20digits."
                    ],
                    "contains": [
                        "url",
                        "encoded url"
                    ]
                },
                {
                    "data_path": "action_result.data.*.decoded_url",
                    "data_type": "string",
                    "example_values": [
                        "https://www.w3schools.com/tags/ref_urlencode.ASP#:~:text=URL Encoding (Percent Encoding)&text=URLs can only be sent,followed by two hexadecimal digits."
                    ],
                    "contains": [
                        "url"
                    ],
                    "column_name": "Decoded URL",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Decoded entire URL",
                        "Parsed from secure-web.cisco.com URL and decoded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get report",
            "description": "Retrieve statistical reports from ESA",
            "verbose": "This action is used to query \"Query-based Reports\" which counts various events in your appliance against a user-specified entity such as IP address, domain name, etc. for a specified duration.<br>If <b>start_time</b> and <b>end_time</b> are not given, then the report will be queried for the last 250 days.<br>If either <b>start_time</b> or <b>end_time</b> is provided, then the report will be queried for 250 days relative to the given parameter.<br>Following is the mapping of the report title and its corresponding entity that can be provided to filter reports:<table><tbody><tr class='plain'><th>Report Title</th><th>Entity Value</th></tr><tr><td>Internal Users</td><td>Email ID of the internal user (e.g. user@example.com)</td></tr><tr><td>Incoming Mail: Domains</td><td>Domain name (e.g. abc.com)</td></tr><tr><td>Incoming Mail: IP Addresses</td><td>IPv4 or IPv6 address</td></tr><tr><td>Incoming Mail: Network Owners</td><td>Name of the network owner (e.g. Xyz Corporation)</td></tr><tr><td>Outgoing Senders: Domains</td><td>Domain name (e.g. abc.com)</td></tr><tr><td>Outgoing Senders: IP Addresses</td><td>IPv4 or IPv6 address</td></tr><tr><td>Outgoing Destinations</td><td>Domain name (e.g. abc.com)</td></tr><tr><td>Outgoing Content Filters</td><td>Name of the outgoing Content Filter</td></tr><tr><td>Virus Types</td><td>Name of virus</td></tr><tr><td>Inbound SMTP Authentication</td><td>Domain name (e.g. abc.com)</td></tr><tr><td>Data Loss Prevention (DLP) Outgoing Policy</td><td>Name of the DLP policy</td></tr></tbody></table><br>The action supports limiting the number of items returned using the <b>limit</b> parameter. If the <b>limit</b> parameter is 0, then the action will fetch no data for the selected report(s). If the limit is not specified, the action will fetch by default 10 items for all specified reports. For a particular report, if the limit specified is greater than the available data, the action will fetch all data for that report.",
            "type": "investigate",
            "identifier": "get_report",
            "read_only": true,
            "parameters": {
                "report_title": {
                    "required": true,
                    "description": "Report Title",
                    "data_type": "string",
                    "order": 0,
                    "value_list": [
                        "Internal Users",
                        "Incoming Mail: Domains",
                        "Incoming Mail: IP Addresses",
                        "Incoming Mail: Network Owners",
                        "Outgoing Senders: Domains",
                        "Outgoing Senders: IP Addresses",
                        "Outgoing Destinations",
                        "Outgoing Content Filters",
                        "Virus Types",
                        "Inbound SMTP Authentication",
                        "DLP Outgoing Policy"
                    ],
                    "primary": true,
                    "contains": [
                        "ciscoesa report title"
                    ],
                    "name": "report_title",
                    "id": 1,
                    "param_name": "report_title"
                },
                "filter_by": {
                    "description": "Entity to filter the results",
                    "data_type": "string",
                    "order": 1,
                    "name": "filter_by",
                    "id": 2,
                    "param_name": "filter_by"
                },
                "filter_value": {
                    "description": "Entity value to filter the results",
                    "data_type": "string",
                    "order": 2,
                    "name": "filter_value",
                    "id": 3,
                    "param_name": "filter_value"
                },
                "starts_with": {
                    "description": "Retrieve items starting with specified filter value",
                    "data_type": "boolean",
                    "order": 3,
                    "name": "starts_with",
                    "id": 4,
                    "param_name": "starts_with"
                },
                "start_time": {
                    "description": "Start time (YYYY-MM-DDTHH:00)",
                    "data_type": "string",
                    "order": 4,
                    "name": "start_time",
                    "id": 5,
                    "param_name": "start_time"
                },
                "end_time": {
                    "description": "End time (YYYY-MM-DDTHH:00)",
                    "data_type": "string",
                    "order": 5,
                    "name": "end_time",
                    "id": 6,
                    "param_name": "end_time"
                },
                "limit": {
                    "default": 10,
                    "description": "Maximum number of items to retrieve",
                    "data_type": "numeric",
                    "order": 6,
                    "name": "limit",
                    "id": 7,
                    "param_name": "limit"
                },
                "offset": {
                    "default": 0,
                    "description": "Starting index of overall result set",
                    "data_type": "numeric",
                    "order": 7,
                    "name": "offset",
                    "id": 8,
                    "param_name": "offset"
                },
                "order_by": {
                    "description": "The attribute by which to order the data in the response",
                    "data_type": "string",
                    "order": 8,
                    "name": "order_by",
                    "id": 9,
                    "param_name": "order_by"
                },
                "order_dir": {
                    "description": "Sort direction of results",
                    "data_type": "string",
                    "order": 9,
                    "value_list": [
                        "asc",
                        "desc"
                    ],
                    "name": "order_dir",
                    "id": 10,
                    "param_name": "order_dir"
                }
            },
            "render": {
                "type": "json"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.end_time",
                    "data_type": "string",
                    "example_values": [
                        "2001-12-12T11:00"
                    ]
                },
                {
                    "data_path": "action_result.parameter.filter_by",
                    "data_type": "string",
                    "example_values": [
                        "ip_address"
                    ]
                },
                {
                    "data_path": "action_result.parameter.filter_value",
                    "data_type": "string",
                    "example_values": [
                        "Test Policy"
                    ]
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "numeric",
                    "example_values": [
                        11
                    ]
                },
                {
                    "data_path": "action_result.parameter.offset",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.parameter.order_by",
                    "data_type": "string",
                    "example_values": [
                        "bulk_mail"
                    ]
                },
                {
                    "data_path": "action_result.parameter.order_dir",
                    "data_type": "string",
                    "example_values": [
                        "asc"
                    ]
                },
                {
                    "data_path": "action_result.parameter.report_title",
                    "data_type": "string",
                    "contains": [
                        "ciscoesa report title"
                    ],
                    "example_values": [
                        "DLP Outgoing Policy"
                    ]
                },
                {
                    "data_path": "action_result.parameter.start_time",
                    "data_type": "string",
                    "example_values": [
                        "2001-11-12T11:00"
                    ]
                },
                {
                    "data_path": "action_result.parameter.starts_with",
                    "data_type": "boolean",
                    "example_values": [
                        "Test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.blocked_dmarc.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.blocked_dmarc.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.blocked_invalid_recipient.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.blocked_invalid_recipient.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.blocked_reputation.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.blocked_reputation.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        42
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.blocked_sdr.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.blocked_sdr.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.bulk_mail.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.bulk_mail.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.detected_amp.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.detected_amp.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.detected_spam.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.detected_spam.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.detected_virus.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.detected_virus.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.dns_verified.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.dns_verified.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.last_sender_group.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.last_sender_group.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.last_sender_group_name.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.last_sender_group_name.resultSet.*.value",
                    "data_type": "string",
                    "example_values": [
                        "UNKNOWNLIST"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.marketing_mail.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.marketing_mail.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.auth_disallow.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.auth_fail.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.auth_success.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_dmarc.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_dmarc.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_invalid_recipient.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_invalid_recipient.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_invalid_recipient.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_invalid_recipient.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_invalid_recipient.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_reputation.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_reputation.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_reputation.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_reputation.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_reputation.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        42
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_reputation.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        24
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_reputation.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_sdr.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_sdr.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_sdr.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_sdr.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.blocked_sdr.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.bulk_mail.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.bulk_mail.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.bulk_mail.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.bulk_mail.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.bulk_mail.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.cert_fail.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.cert_fallback_fail.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.cert_fallback_success.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.cert_success.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.conn_plain.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.conn_tls_fail.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.conn_tls_opt_fail.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.conn_tls_opt_success.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.conn_tls_success.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.conn_tls_total.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_amp.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_amp.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_amp.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_amp.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_amp.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_spam.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_spam.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_spam.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_spam.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_spam.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_spam.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_spam.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_virus.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_virus.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_virus.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_virus.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.detected_virus.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.dns_verified.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.dns_verified.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.dns_verified.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.dns_verified.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.dns_verified.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.encrypted_tls.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_bulk_mail.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_bulk_mail.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_bulk_mail.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_amp.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_amp.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_amp.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_content_filter.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_content_filter.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_content_filter.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_ims_spam_increment_over_case.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_ims_spam_increment_over_case.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_ims_spam_increment_over_case.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_spam.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_spam.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_spam.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_virus.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_virus.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_detected_virus.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_graymail.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_graymail.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_graymail.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_marketing_mail.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_marketing_mail.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_marketing_mail.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_social_mail.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_social_mail.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_social_mail.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_threat_content_filter.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_threat_content_filter.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_threat_content_filter.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_total_clean_recipients.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_total_clean_recipients.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_total_clean_recipients.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_total_recipients.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_total_recipients.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.incoming_total_recipients.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.last_sender_group.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.last_sender_group.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.last_sender_group.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.last_sender_group.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.last_sender_group.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.last_sender_group_name.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.last_sender_group_name.*.count.value",
                    "data_type": "string",
                    "example_values": [
                        "UNKNOWNLIST"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.last_sender_group_name.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.last_sender_group_name.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.last_sender_group_name.*.value",
                    "data_type": "string",
                    "example_values": [
                        "UNKNOWNLIST"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.marketing_mail.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.marketing_mail.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.marketing_mail.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.marketing_mail.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.marketing_mail.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.noauth.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_amp.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_amp.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_amp.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_content_filter.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_content_filter.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_content_filter.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_ims_spam_increment_over_case.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_ims_spam_increment_over_case.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_ims_spam_increment_over_case.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_spam.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_spam.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_spam.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_virus.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_virus.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_detected_virus.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_threat_content_filter.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_threat_content_filter.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_threat_content_filter.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_total_clean_recipients.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_total_clean_recipients.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_total_clean_recipients.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_total_recipients.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_total_recipients.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.outgoing_total_recipients.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "test@user.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.sbrs_score.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.sbrs_score.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.sbrs_score.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.sbrs_score.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.sbrs_score.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.social_mail.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.social_mail.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.social_mail.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.social_mail.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.social_mail.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.social_mail.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.social_mail.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.threat_content_filter.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.threat_content_filter.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.threat_content_filter.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.threat_content_filter.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_accepted_connections.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_clean_recipients.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_clean_recipients.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_clean_recipients.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_clean_recipients.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_clean_recipients.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_clean_recipients.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_graymail_recipients.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_graymail_recipients.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_graymail_recipients.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_graymail_recipients.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_graymail_recipients.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_graymail_recipients.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_recipients.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_recipients.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_recipients.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        42
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_recipients.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_recipients.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_recipients.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        42
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_rejected_connections.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_threat_recipients.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_threat_recipients.*.count.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_threat_recipients.*.count.value",
                    "data_type": "numeric",
                    "example_values": [
                        42
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_threat_recipients.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_threat_recipients.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "10.1.16.99"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_threat_recipients.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        42
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.resultSet.total_throttled_recipients.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data.sbrs_score.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.sbrs_score.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.social_mail.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.social_mail.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.threat_content_filter.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.threat_content_filter.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.total_clean_recipients.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.total_clean_recipients.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.total_graymail_recipients.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.total_graymail_recipients.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.total_recipients.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.total_recipients.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        42
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.total_threat_recipients.resultSet.*.key",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.total_threat_recipients.resultSet.*.value",
                    "data_type": "numeric",
                    "example_values": [
                        42
                    ]
                },
                {
                    "data_path": "action_result.data.*.data.type",
                    "data_type": "string",
                    "example_values": [
                        "mail_sender_domain_detail"
                    ]
                },
                {
                    "data_path": "action_result.data.*.mail_incoming_domain_detail.data.blocked_reputation.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        6702
                    ]
                },
                {
                    "data_path": "action_result.data.*.mail_incoming_domain_detail.data.blocked_reputation.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.mail_incoming_domain_detail.data.total_recipients.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        6702
                    ]
                },
                {
                    "data_path": "action_result.data.*.mail_incoming_domain_detail.data.total_recipients.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.mail_incoming_domain_detail.data.total_rejected_connections.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        2234
                    ]
                },
                {
                    "data_path": "action_result.data.*.mail_incoming_domain_detail.data.total_rejected_connections.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.mail_incoming_domain_detail.data.total_threat_recipients.*.count",
                    "data_type": "numeric",
                    "example_values": [
                        6702
                    ]
                },
                {
                    "data_path": "action_result.data.*.mail_incoming_domain_detail.data.total_threat_recipients.*.recipient",
                    "data_type": "string",
                    "example_values": [
                        "unknown domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.mail_incoming_domain_detail.uri",
                    "data_type": "string",
                    "example_values": [
                        "/api/v1.0/stats/mail_incoming_domain_detail?duration=2021-07-30T12%3A00%2B00%3A00%2F2022-04-05T12%3A00%2B00%3A00&max=10"
                    ]
                },
                {
                    "data_path": "action_result.data.*.mail_users_detail.uri",
                    "data_type": "string",
                    "example_values": [
                        "/api/v1.0/stats/mail_users_detail?duration=2021-07-31T10%3A00%2B00%3A00%2F2022-04-06T10%3A00%2B00%3A00&max=10"
                    ]
                },
                {
                    "data_path": "action_result.data.*.meta.totalCount",
                    "data_type": "numeric",
                    "example_values": [
                        -1
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Report queried successfully"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        12
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        34
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "list dictionaries",
            "identifier": "list_dictionaries",
            "description": "List all dictionaries available in Cisco ESA",
            "verbose": "",
            "type": "investigate",
            "read_only": false,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string",
                    "column_name": "name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.encoding",
                    "data_type": "string",
                    "column_name": "encoding",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.ignorecase",
                    "data_type": "numeric",
                    "column_name": "ignorecase",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.wholewords",
                    "data_type": "numeric",
                    "column_name": "wholewords",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.words_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.words_count.term_count",
                    "data_type": "numeric",
                    "column_name": "term_count",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.words_count.smart_identifier_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.words",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.words.*.0",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.words.*.1",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list dictionary items",
            "identifier": "list_dictionary_items",
            "description": "List all entries of an ESA dictionary",
            "verbose": "",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "dictionary_name": {
                    "description": "Name of dictionary to list",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "ciscoesa dictionary name"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "dictionary_name",
                    "id": 1,
                    "param_name": "dictionary_name"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.dictionary_name",
                    "data_type": "string",
                    "contains": [
                        "ciscoesa dictionary name"
                    ],
                    "column_name": "dictionary_name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "add dictionary",
            "identifier": "add_dictionary",
            "description": "Adds a new ESA dictionary",
            "verbose": "",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "dictionary_name": {
                    "description": "Name  of the ESA dictionary.",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "dictionary_name",
                    "id": 1,
                    "param_name": "dictionary_name"
                },
                "ignorecase": {
                    "description": "Indicates if the term that needs to be matched is case-sensitive (False) or not case-sensitive (True)",
                    "data_type": "boolean",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "default": true,
                    "order": 1,
                    "name": "ignorecase",
                    "id": 2,
                    "param_name": "ignorecase"
                },
                "wholewords": {
                    "description": "Indicates if the words need to be matched completely (True) or not completely (False).",
                    "data_type": "boolean",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "default": true,
                    "order": 2,
                    "name": "wholewords",
                    "id": 3,
                    "param_name": "wholewords"
                },
                "words": {
                    "description": "A list of terms to add to a dictionary. It takes a comma separated list with the structure \"word1|weight1\" or \"word1|weigh1|prefix\" (for smart identifiers)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 3,
                    "name": "words",
                    "id": 4,
                    "param_name": "words"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.dictionary_name",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "dictionary_name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.ignorecase",
                    "data_type": "boolean",
                    "contains": [],
                    "column_name": "ignorecase",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.wholewords",
                    "data_type": "boolean",
                    "contains": [],
                    "column_name": "wholewords",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.words",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "words",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "add dictionary items",
            "identifier": "add_dictionary_items",
            "description": "Add an entry to an ESA dictionary",
            "verbose": "Per the documentation, the action will handle escaping special regex character prior to adding to the dictionary.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "dictionary_name": {
                    "description": "Name of dictionary to add an item to",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "ciscoesa dictionary name"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "dictionary_name",
                    "id": 1,
                    "param_name": "dictionary_name"
                },
                "words": {
                    "description": "A list of terms to add to a dictionary. It takes a comma separated list with the structure \"word1|weight1\" or \"word1|weigh1|prefix\" (for smart identifiers).",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "ciscoesa item value"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 1,
                    "name": "words",
                    "id": 2,
                    "param_name": "words"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.dictionary_name",
                    "data_type": "string",
                    "contains": [
                        "ciscoesa dictionary name"
                    ],
                    "column_name": "dictionary_name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.words",
                    "data_type": "string",
                    "contains": [
                        "ciscoesa item value"
                    ],
                    "column_name": "words",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "remove dictionary",
            "identifier": "remove_dictionary",
            "description": "Removes an existing ESA dictionary",
            "verbose": "",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "dictionary_name": {
                    "description": "Name  of the ESA dictionary.",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "dictionary_name",
                    "id": 1,
                    "param_name": "dictionary_name"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.dictionary_name",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "dictionary_name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "remove dictionary items",
            "identifier": "remove_dictionary_items",
            "description": "Remove an entry from an ESA dictionary",
            "verbose": "Per the documentation, the action will handle escaping special regex character prior to removing from the dictionary.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "dictionary_name": {
                    "description": "Name of dictionary to remove an item from",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "ciscoesa dictionary name"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "dictionary_name",
                    "id": 1,
                    "param_name": "dictionary_name"
                },
                "words": {
                    "description": "A list of terms to remove from the dictionary. It takes a comma separated list of words.",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "ciscoesa item value"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 1,
                    "name": "words",
                    "id": 2,
                    "param_name": "words"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.dictionary_name",
                    "data_type": "string",
                    "contains": [
                        "ciscoesa dictionary name"
                    ],
                    "column_name": "dictionary_name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.words",
                    "data_type": "string",
                    "contains": [
                        "ciscoesa item value"
                    ],
                    "column_name": "words",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "add policy items",
            "identifier": "add_policy_items",
            "description": "Add users to an Incoming Mail Policy",
            "verbose": "",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "policy": {
                    "description": "Incoming Email Policy",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "policy",
                    "id": 1,
                    "param_name": "policy"
                },
                "sender_config": {
                    "description": "This is either \"sender\" or \"sender_not\" which then contains the list of domain_entries.",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [
                        "sender_not",
                        "sender"
                    ],
                    "default": "sender",
                    "order": 1,
                    "name": "sender_config",
                    "id": 2,
                    "param_name": "sender_config"
                },
                "sender": {
                    "description": "Comma separated list of domain_entries for sender (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 2,
                    "name": "sender",
                    "id": 3,
                    "param_name": "sender"
                },
                "sender_not": {
                    "description": "Comma separated list of domain_entries for sender_not (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 3,
                    "name": "sender_not",
                    "id": 4,
                    "param_name": "sender_not"
                },
                "receiver": {
                    "description": "Comma separated list of domain_entries for receiver (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 4,
                    "name": "receiver",
                    "id": 5,
                    "param_name": "receiver"
                },
                "receiver_not": {
                    "description": "Comma separated list of domain_entries for receiver_not (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 5,
                    "name": "receiver_not",
                    "id": 6,
                    "param_name": "receiver_not"
                },
                "operation": {
                    "description": "Boolean logic between receiver  and receiver_not domain_entries. The values can be \"and\" or \"or\" .",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [
                        "and",
                        "or"
                    ],
                    "default": "and",
                    "order": 6,
                    "name": "operation",
                    "id": 7,
                    "param_name": "operation"
                },
                "raw_json": {
                    "description": "Raw JSON payload for add policy items action.",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 7,
                    "name": "raw_json",
                    "id": 8,
                    "param_name": "raw_json"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.policy",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "policy",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.sender_config",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "sender_config",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.sender",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "sender",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.sender_not",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "sender_not",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.receiver",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "receiver",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.parameter.receiver_not",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "receiver_not",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.parameter.operation",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "operation",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.parameter.raw_json",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "raw_json",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 8
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list policy items",
            "identifier": "list_policy_items",
            "description": "List information of all users of an Incoming Mail Policy",
            "verbose": "",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "policy": {
                    "description": "Incoming Mail Policy",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "policy",
                    "id": 1,
                    "param_name": "policy"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.policy",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "policy",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sender_config",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sender_config.sender",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sender_config.sender.domain_entries",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sender_config.sender.domain_entries.0",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.receiver_config",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.receiver_config.operation",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.receiver_config.receiver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.receiver_config.receiver.domain_entries",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.receiver_config.receiver.domain_entries.0",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "remove policy items",
            "identifier": "remove_policy_items",
            "description": "Remove users from an Incoming Mail Policy",
            "verbose": "",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "policy": {
                    "description": "Incoming Email Policy",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "policy",
                    "id": 1,
                    "param_name": "policy"
                },
                "sender_config": {
                    "description": "This is either \"sender\" or \"sender_not\" which then contains the list of domain_entries.",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [
                        "sender",
                        "sender_not"
                    ],
                    "default": "sender",
                    "order": 1,
                    "name": "sender_config",
                    "id": 2,
                    "param_name": "sender_config"
                },
                "sender": {
                    "description": "Comma separated list of domain_entries for sender (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 2,
                    "name": "sender",
                    "id": 3,
                    "param_name": "sender"
                },
                "sender_not": {
                    "description": "Comma separated list of domain_entries for sender_not (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 3,
                    "name": "sender_not",
                    "id": 4,
                    "param_name": "sender_not"
                },
                "receiver": {
                    "description": "Comma separated list of domain_entries for receiver (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 4,
                    "name": "receiver",
                    "id": 5,
                    "param_name": "receiver"
                },
                "receiver_not": {
                    "description": "Comma separated list of domain_entries for receiver_not (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 5,
                    "name": "receiver_not",
                    "id": 6,
                    "param_name": "receiver_not"
                },
                "operation": {
                    "description": "Boolean logic between receiver  and receiver_not domain_entries. The values can be \"and\" or \"or\" . raw_json: Raw JSON payload for add policy items action.",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [
                        "or",
                        "and"
                    ],
                    "default": "and",
                    "order": 6,
                    "name": "operation",
                    "id": 7,
                    "param_name": "operation"
                },
                "raw_json": {
                    "description": "Raw JSON payload for add policy items action.",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 7,
                    "name": "raw_json",
                    "id": 8,
                    "param_name": "raw_json"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.policy",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "policy",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.sender_config",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "sender_config",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.sender",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "sender",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.sender_not",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "sender_not",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.receiver",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "receiver",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.parameter.receiver_not",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "receiver_not",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.parameter.operation",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "operation",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.parameter.raw_json",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "raw_json",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 8
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "update policy items",
            "identifier": "update_policy_items",
            "description": "Update users in an Incoming Mail Policy",
            "verbose": "",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "policy": {
                    "description": "Incoming Email Policy",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "policy",
                    "id": 1,
                    "param_name": "policy"
                },
                "sender_config": {
                    "description": "This is either \"sender\" or \"sender_not\" which then contains the list of domain_entries.",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [
                        "sender",
                        "sender_not"
                    ],
                    "default": "sender",
                    "order": 1,
                    "name": "sender_config",
                    "id": 2,
                    "param_name": "sender_config"
                },
                "sender": {
                    "description": "Comma separated list of domain_entries for sender (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 2,
                    "name": "sender",
                    "id": 3,
                    "param_name": "sender"
                },
                "sender_not": {
                    "description": "Comma separated list of domain_entries for sender_not (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 3,
                    "name": "sender_not",
                    "id": 4,
                    "param_name": "sender_not"
                },
                "receiver": {
                    "description": "Comma separated list of domain_entries for receiver (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 4,
                    "name": "receiver",
                    "id": 5,
                    "param_name": "receiver"
                },
                "receiver_not": {
                    "description": "Comma separated list of domain_entries for receiver_not (e.g.: user@example.com,User@,@example.com,@.example.com,user@[1.2.3.4],@[1.1.2.3], user@[ipv6:2001:db8::1])",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 5,
                    "name": "receiver_not",
                    "id": 6,
                    "param_name": "receiver_not"
                },
                "operation": {
                    "description": "Boolean logic between receiver  domain_entries. The values can be \"and\" or \"or\"",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [
                        "and",
                        "or"
                    ],
                    "default": "and",
                    "order": 6,
                    "name": "operation",
                    "id": 7,
                    "param_name": "operation"
                },
                "raw_json": {
                    "description": "Raw JSON payload for update policy items action.",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 7,
                    "name": "raw_json",
                    "id": 8,
                    "param_name": "raw_json"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.policy",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "policy",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.sender_config",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "sender_config",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.sender",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "sender",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.sender_not",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "sender_not",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.receiver",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "receiver",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.parameter.receiver_not",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "receiver_not",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.parameter.operation",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "operation",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.parameter.raw_json",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "raw_json",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 8
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "search pov quarantine",
            "identifier": "search_pov_quarantine",
            "description": "Search messages in  the other quarantine that match multiple attributes",
            "verbose": "",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "start_date": {
                    "description": "The starting point of the time period for the query. It specifies the date and time from which data should be retrieved, formatted as YYYY-MM-DDThh:mm:00.000Z.",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "start_date",
                    "id": 1,
                    "param_name": "start_date"
                },
                "end_date": {
                    "description": "The ending point of the time period for the query. It specifies the date and time up to which data should be retrieved, formatted as YYYY-MM-DDThh:mm:00.000Z.",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 1,
                    "name": "end_date",
                    "id": 2,
                    "param_name": "end_date"
                },
                "quarantines": {
                    "description": "This parameter defines the quarantines to search for. Comma separated list of quarantines (e.g.: Outbreak,Virus,File Analysis,Unclassified,Policy).",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 2,
                    "name": "quarantines",
                    "id": 3,
                    "param_name": "quarantines"
                },
                "offset": {
                    "description": "Specify an offset value to retrieve a subset of records starting with the offset value. Offset works with limit, which determines how many records to retrieve starting from the offset.",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 3,
                    "name": "offset",
                    "id": 4,
                    "param_name": "offset"
                },
                "limit": {
                    "description": "Specify the number of records to retrieve.",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 4,
                    "name": "limit",
                    "id": 5,
                    "param_name": "limit"
                },
                "subject_filter_by": {
                    "description": "Filter logic to filter the Subject field.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [
                        "contains",
                        "starts_with",
                        "ends_with",
                        "matches_exactly",
                        "does_not_contain",
                        "does_not_start_with",
                        "does_not_end_with",
                        "does_not_match"
                    ],
                    "default": "",
                    "order": 5,
                    "name": "subject_filter_by",
                    "id": 6,
                    "param_name": "subject_filter_by"
                },
                "subject_filter_value": {
                    "description": "Subject value to used to filter Subjects using subjectFilterBy logic.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 6,
                    "name": "subject_filter_value",
                    "id": 7,
                    "param_name": "subject_filter_value"
                },
                "originating_esa_ip": {
                    "description": "The IP address of the ESA in which the message was processed.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 7,
                    "name": "originating_esa_ip",
                    "id": 8,
                    "param_name": "originating_esa_ip"
                },
                "attachment_name": {
                    "description": "The name of the attachment available in the searched emails.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 8,
                    "name": "attachment_name",
                    "id": 9,
                    "param_name": "attachment_name"
                },
                "attachment_size_filter_by": {
                    "description": "Filter logic to filter the attachments.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [
                        "range",
                        "less_than",
                        "more_than"
                    ],
                    "default": "",
                    "order": 9,
                    "name": "attachment_size_filter_by",
                    "id": 10,
                    "param_name": "attachment_size_filter_by"
                },
                "attachment_size_from_value": {
                    "description": "Specify an attachment size in KB. This is applicable only for attachmentSizeFilterBy=ragne or attachmentSizeFilterBy=more_than",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 10,
                    "name": "attachment_size_from_value",
                    "id": 11,
                    "param_name": "attachment_size_from_value"
                },
                "attachment_size_to_value": {
                    "description": "Specify an attachment size in KB. This is applicable only for attachmentSizeFilterBy=ragne or attachmentSizeFilterBy=less_than",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 11,
                    "name": "attachment_size_to_value",
                    "id": 12,
                    "param_name": "attachment_size_to_value"
                },
                "order_by": {
                    "description": "Specify how to order to retrieved messages.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [
                        "sender",
                        "subject",
                        "received",
                        "scheduledExit",
                        "size"
                    ],
                    "default": "",
                    "order": 12,
                    "name": "order_by",
                    "id": 13,
                    "param_name": "order_by"
                },
                "order_dir": {
                    "description": "Specify order direction for retrieved messages.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [
                        "asc",
                        "desc"
                    ],
                    "default": "",
                    "order": 13,
                    "name": "order_dir",
                    "id": 14,
                    "param_name": "order_dir"
                },
                "envelope_recipient_filter_by": {
                    "description": "Filter logic to filter the email Recipient.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [
                        "contains",
                        "starts_with",
                        "ends_with",
                        "matches_exactly",
                        "does_not_contain",
                        "does_not_start_with",
                        "does_not_end_with",
                        "does_not_match"
                    ],
                    "default": "",
                    "order": 14,
                    "name": "envelope_recipient_filter_by",
                    "id": 15,
                    "param_name": "envelope_recipient_filter_by"
                },
                "envelope_recipient_filter_value": {
                    "description": "The value to search for. This is a user defined value. For example: envelopeRecipientFilterValue=user.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 15,
                    "name": "envelope_recipient_filter_value",
                    "id": 16,
                    "param_name": "envelope_recipient_filter_value"
                },
                "envelope_sender_filter_by": {
                    "description": "Filter logic to filter the email Sender.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [
                        "contains",
                        "starts_with",
                        "ends_with",
                        "matches_exactly",
                        "does_not_contain",
                        "does_not_start_with",
                        "does_not_end_with",
                        "does_not_match"
                    ],
                    "default": "",
                    "order": 16,
                    "name": "envelope_sender_filter_by",
                    "id": 17,
                    "param_name": "envelope_sender_filter_by"
                },
                "envelope_sender_filter_value": {
                    "description": "The value to search for. This is a user defined value. For example: envelopeSenderFilterValue=user.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 17,
                    "name": "envelope_sender_filter_value",
                    "id": 18,
                    "param_name": "envelope_sender_filter_value"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.start_date",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "start_date",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.end_date",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "end_date",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.quarantines",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.offset",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.subject_filter_by",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.subject_filter_value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.originating_esa_ip",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.attachment_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.attachment_size_filter_by",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.attachment_size_from_value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.attachment_size_to_value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.order_by",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.order_dir",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.envelope_recipient_filter_by",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.envelope_recipient_filter_value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.envelope_sender_filter_by",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.envelope_sender_filter_value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.mid",
                    "data_type": "numeric",
                    "column_name": "mid",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.attributes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attributes.size",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attributes.esaMid",
                    "data_type": "numeric",
                    "column_name": "esaMid",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.attributes.sender",
                    "data_type": "string",
                    "column_name": "sender",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.attributes.subject",
                    "data_type": "string",
                    "column_name": "subject",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.attributes.received",
                    "data_type": "string",
                    "column_name": "received",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.data.*.attributes.recipient",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attributes.esaHostName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attributes.inQuarantines",
                    "data_type": "string",
                    "column_name": "inQuarantines",
                    "column_order": 8
                },
                {
                    "data_path": "action_result.data.*.attributes.scheduledExit",
                    "data_type": "string",
                    "column_name": "scheduledExit",
                    "column_order": 9
                },
                {
                    "data_path": "action_result.data.*.attributes.originatingEsaIp",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attributes.quarantineForReason",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attributes.quarantineForReasonDict",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attributes.quarantineForReasonDict.*.reason",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "release pov quarantine",
            "identifier": "release_pov_quarantine",
            "description": "Release a message that matches the mid attribute from a pov quarantine",
            "verbose": "",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "mids": {
                    "description": "POV quarantine message ids to be released.",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "mids",
                    "id": 1,
                    "param_name": "mids"
                },
                "quarantine_name": {
                    "description": "POV quarantine name.",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 1,
                    "name": "quarantine_name",
                    "id": 2,
                    "param_name": "quarantine_name"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.mids",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "mids",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.quarantine_name",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "quarantine_name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "search spam quarantine",
            "identifier": "search_spam_quarantine",
            "description": "Search messages in  the spam quarantine that match multiple attributes",
            "verbose": "",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "start_date": {
                    "description": "The starting point of the time period for the query. It specifies the date and time from which data should be retrieved, formatted as YYYY-MM-DDThh:mm:00.000Z.",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "start_date",
                    "id": 1,
                    "param_name": "start_date"
                },
                "end_date": {
                    "description": "The ending point of the time period for the query. It specifies the date and time up to which data should be retrieved, formatted as YYYY-MM-DDThh:mm:00.000Z.",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 1,
                    "name": "end_date",
                    "id": 2,
                    "param_name": "end_date"
                },
                "offset": {
                    "description": "Specify an offset value to retrieve a subset of records starting with the offset value. Offset works with limit, which determines how many records to retrieve starting from the offset.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 2,
                    "name": "offset",
                    "id": 3,
                    "param_name": "offset"
                },
                "limit": {
                    "description": "Specify the number of records to retrieve.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 3,
                    "name": "limit",
                    "id": 4,
                    "param_name": "limit"
                },
                "order_by": {
                    "description": "Specify how to order to retrieved messages.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [
                        "from_address",
                        "to_address",
                        "subject"
                    ],
                    "default": "",
                    "order": 4,
                    "name": "order_by",
                    "id": 5,
                    "param_name": "order_by"
                },
                "order_dir": {
                    "description": "Specify order direction for retrieved messages.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [
                        "asc",
                        "desc"
                    ],
                    "default": "",
                    "order": 5,
                    "name": "order_dir",
                    "id": 6,
                    "param_name": "order_dir"
                },
                "envelope_recipient_filter_operator": {
                    "description": "Filter logic to filter the email Recipient.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [
                        "contains",
                        "is",
                        "begins_with",
                        "ends_with",
                        "does_not_contain"
                    ],
                    "default": "",
                    "order": 6,
                    "name": "envelope_recipient_filter_operator",
                    "id": 7,
                    "param_name": "envelope_recipient_filter_operator"
                },
                "envelope_recipient_filter_value": {
                    "description": "The value to search for. This is a user defined value. For example: envelopeRecipientFilterValue=user.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 7,
                    "name": "envelope_recipient_filter_value",
                    "id": 8,
                    "param_name": "envelope_recipient_filter_value"
                },
                "filter_operator": {
                    "description": "Filter logic to filter the email.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [
                        "contains",
                        "is",
                        "begins_with",
                        "ends_with",
                        "does_not_contain"
                    ],
                    "default": "",
                    "order": 8,
                    "name": "filter_operator",
                    "id": 9,
                    "param_name": "filter_operator"
                },
                "filter_value": {
                    "description": "The value to search for. This is a user defined value. For example: filterValue=abc.com.",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 9,
                    "name": "filter_value",
                    "id": 10,
                    "param_name": "filter_value"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.start_date",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "start_date",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.end_date",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "end_date",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.offset",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.order_by",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.order_dir",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.envelope_recipient_filter_operator",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.envelope_recipient_filter_value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.filter_operator",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.filter_value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.mid",
                    "data_type": "numeric",
                    "column_name": "mid",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.attributes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attributes.envelopeRecipient",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attributes.toAddress",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attributes.subject",
                    "data_type": "string",
                    "column_name": "subject",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.attributes.date",
                    "data_type": "string",
                    "column_name": "date",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.attributes.fromAddress",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.attributes.size",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "release spam quarantine",
            "identifier": "release_spam_quarantine",
            "description": "Release a message that matches the mid attribute from spam quarantine",
            "verbose": "",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "mids": {
                    "description": "Spam quarantine message ids to be released (comma separated list of ids)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "mids"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.mids",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "mids",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": []
    }
}
